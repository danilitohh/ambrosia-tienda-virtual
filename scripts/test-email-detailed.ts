import { sendEmail } from '../src/lib/email'

async function testEmail() {
  console.log('üß™ Probando env√≠o de email detallado...')
  
  // Verificar variables de entorno
  console.log('üìã Verificando variables de entorno:')
  console.log('RESEND_API_KEY:', process.env.RESEND_API_KEY ? '‚úÖ Configurado' : '‚ùå No configurado')
  console.log('EMAIL_FROM:', process.env.EMAIL_FROM || '‚ùå No configurado')
  console.log('NEXT_PUBLIC_APP_URL:', process.env.NEXT_PUBLIC_APP_URL || '‚ùå No configurado')
  
  if (!process.env.RESEND_API_KEY) {
    console.error('‚ùå RESEND_API_KEY no est√° configurado')
    return
  }
  
  if (!process.env.EMAIL_FROM) {
    console.error('‚ùå EMAIL_FROM no est√° configurado')
    return
  }
  
  try {
    console.log('üìß Enviando email de prueba...')
    
    const result = await sendEmail({
      to: 'test@example.com',
      subject: 'Prueba de email - Ambrosia',
      html: `
        <h1>Prueba de email</h1>
        <p>Este es un email de prueba para verificar que el sistema de emails funciona correctamente.</p>
        <p>Fecha: ${new Date().toLocaleString()}</p>
        <p>Si recibes este email, el sistema est√° funcionando correctamente.</p>
      `
    })
    
    if (result.success) {
      console.log('‚úÖ Email enviado exitosamente!')
      console.log('üìß Respuesta:', result.data)
    } else {
      console.error('‚ùå Error enviando email:', result.error)
    }
  } catch (error) {
    console.error('‚ùå Error en el script:', error)
  }
}

testEmail() 